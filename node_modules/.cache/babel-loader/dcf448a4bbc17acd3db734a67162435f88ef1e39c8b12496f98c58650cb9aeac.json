{"ast":null,"code":"var _jsxFileName = \"S:\\\\Projects'\\\\personal projects\\\\ReactInternship\\\\src\\\\components\\\\AndLoading.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AndLoading = () => {\n  _s();\n  const navigate = useNavigate();\n  const [progress, setProgress] = React.useState(0);\n  useEffect(() => {\n    const progressInterval = setInterval(() => {\n      setProgress(prevProgress => prevProgress + 1);\n    }, 50); // Adjust the interval time as needed\n\n    if (progress === 100) {\n      clearInterval(progressInterval);\n      setTimeout(() => {\n        navigate('/DecidePath'); // Replace with the desired redirect URL\n      }, 50); // Add a slight delay for animation completion\n    }\n    return () => {\n      clearInterval(progressInterval);\n    };\n  }, [progress, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        variant: \"determinate\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-8 texting\",\n        children: \"Finding learning path recommendations for you based on\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold texting1\",\n        children: \"your responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AndLoading, \"oLsj6nxDxFQDKk9zfvpaB2GOUOw=\", false, function () {\n  return [useNavigate];\n});\n_c = AndLoading;\nvar _c;\n$RefreshReg$(_c, \"AndLoading\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","CircularProgress","jsxDEV","_jsxDEV","AndLoading","_s","navigate","progress","setProgress","progressInterval","setInterval","prevProgress","clearInterval","setTimeout","className","children","variant","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Projects'/personal projects/ReactInternship/src/components/AndLoading.js"],"sourcesContent":["import React, {  useEffect, useState } from \"react\";\r\nimport \"../index.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport const AndLoading = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    const progressInterval = setInterval(() => {\r\n      setProgress((prevProgress) => prevProgress + 1);\r\n    }, 50); // Adjust the interval time as needed\r\n\r\n    if (progress === 100) {\r\n      clearInterval(progressInterval);\r\n      setTimeout(() => {\r\n        navigate('/DecidePath'); // Replace with the desired redirect URL\r\n      }, 50); // Add a slight delay for animation completion\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(progressInterval);\r\n    };\r\n  }, [progress, navigate]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <div>\r\n      <CircularProgress variant=\"determinate\" value={progress} />\r\n      </div>\r\n      <div className=\"container1\">\r\n        <h2 className=\"text-2xl font-bold mb-8 texting\">\r\n          Finding learning path recommendations for you based on\r\n        </h2>\r\n        <h2 className=\"text-2xl font-bold texting1\">your responses</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,cAAc;AACrB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;EAGjDD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAGC,WAAW,CAAC,MAAM;MACzCF,WAAW,CAAEG,YAAY,IAAKA,YAAY,GAAG,CAAC,CAAC;IACjD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,IAAIJ,QAAQ,KAAK,GAAG,EAAE;MACpBK,aAAa,CAACH,gBAAgB,CAAC;MAC/BI,UAAU,CAAC,MAAM;QACfP,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;MAC3B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACV;IAEA,OAAO,MAAM;MACXM,aAAa,CAACH,gBAAgB,CAAC;IACjC,CAAC;EACH,CAAC,EAAE,CAACF,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAExB,oBACEH,OAAA;IAAKW,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEZ,OAAA;MAAAY,QAAA,eACAZ,OAAA,CAACF,gBAAgB;QAACe,OAAO,EAAC,aAAa;QAACC,KAAK,EAAEV;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNlB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBZ,OAAA;QAAIW,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAC;MAEhD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLlB,OAAA;QAAIW,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCWD,UAAU;EAAA,QACJJ,WAAW;AAAA;AAAAsB,EAAA,GADjBlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}